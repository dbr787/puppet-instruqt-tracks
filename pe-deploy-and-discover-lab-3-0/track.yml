slug: pe-deploy-and-discover-lab-3-0
id: trd6dwmkdt6s
type: sandbox
title: 'PE Deploy and Discover - Lab 3.0: Identify Information About Your Nodes By Using facter_task & External Facts'
teaser: Use facter_task & external facts in PE to identify information about your nodes.
description: |-
  # We're putting the finishing touches on this BETA Puppet Practice Lab — go ahead and take a peek!

  Please help us find any bugs that need to be zapped and share your feedback for improving this learning experience by clicking the **Bug Zapper** tab at the top of each challenge and completing the short survey.

  We welcome your suggestions and value your feedback. If you have additional comments or suggestions after completing this BETA Puppet Practice Lab, please [reach out to us directly](mailto:education@puppet.com).
  ___

  **What you'll learn**

  In this lab you'll learn how to use **facter_task** from within the PE console to create custom external facts, giving you a glimpse of how Puppet can be used as a customizable inventory system that provides visibility and insights on your infrastructure's nodes.

  **Prerequisites**

  None

  **Before you start**

  Keep an eye on the clock. You have 30 minutes to complete this lab. After 30 minutes, your learning environment expires and your work will not be saved. If you haven't completed the lab, you can simply restart it. Click **Start track** when you're ready to begin.
icon: https://storage.googleapis.com/instruqt-images/bz-smallicon-1.png
tags:
- deploy-and-discover
owner: puppet
developers:
- greg.larkin@puppet.com
- thomas.chisholm@puppet.com
- tara.swenson@puppet.com
- catherine.trinkwon@puppet.com
private: true
published: true
show_timer: true
challenges:
- slug: use-facter-with-an-external-script
  id: br8duqywypho
  type: challenge
  title: Use Facter with an external script
  teaser: Use Facter with an external script
  notes:
  - type: text
    contents: |-
      Facter gathers built-in (core) facts that are packaged within it. It can also gather custom or external facts by using scripts that you or a third party have written.

      In this lab, you will use the PE console to:
       * Run `facter_task` against the nodes in your environment to discover which data center each node is located in.
       * Create an external fact to mark each node with its corresponding data center.

      Click **Start** when you're ready to begin.
  assignment: |
    ## Run `facter_task` in PE to retrieve data center facts:

    1. On the **PE Console** tab, log in using the ID `admin` and password `puppetlabs`.

    2. From the console sidebar, navigate to the **Tasks** page, and then click **Run a task**.

    3. In the **Task** field, enter `facter_task`.

    4. Add a fact for the task to return. In the **Parameter** field, enter `fact`. In the **Value** field, enter `timezone`, and then click **Add to task**.

    5. Specify what to run the task against. From the **Select targets** list, choose **Node list**.

    6. Search for nodes used in this lab. In the **Add nodes** field enter `agent`, then click **Search**.

    7. Click **Add all**, and then click **Run task**.

    Result: On the **Task Details** page, notice that the task output for each node includes the `timezone` fact.

    Next, you will install an external fact script to create a data center fact, and then use that script to verify that Facter can retrieve the fact.

    Continue below to follow the instructions for Linux, or skip to the [Windows instructions](#windows).
    - - -
    <img src="https://storage.googleapis.com/instruqt-images/graphic-linux.png" a name="linux">

    ## Create an external fact:
    1. Check that the data center fact does not already exist. On the **Linux Agent** tab, run the following command (it should produce no value):
    Tip: Click the code block to copy it, and then right-click and paste it on the command line.
    ```
    facter datacenter
    ```
    2. Move the provided external fact script into place. Navigate to your home directory:

    ```
    cd
    ```

    3. Create the Facter location directory and external fact script:

    ```
    mkdir -p /etc/puppetlabs/facter/facts.d
    ```

    4. Open the script in the vi editor:
    ```
    vi /etc/puppetlabs/facter/facts.d/datacenter.sh
    ```

    5. Add the following contents to the script, replacing `<DATACENTER>` with your time zone's **Datacenter** value from the table below:
    ```
    #!/usr/bin/env bash
    echo "datacenter=<DATACENTER>"
    ```
    | Time zone | Datacenter      |
    |-----------|-----------------|
    | Eastern   | datacenter-east |
    | Pacific   | datacenter-west |

    6. Close vi (type **:wq** and press **Enter**) and make the script executable:
    ```
    chmod +x /etc/puppetlabs/facter/facts.d/datacenter.sh
    ```

    ## Verify that the fact was installed and is accessible by Facter:

    7. Run `facter datacenter` again and notice the new output: Facter should return `datacenter-west`.

    8. Run Puppet to send the new fact to the primary Puppet server:
    ```
    puppet agent -t
    ```

    9. On the **PE Console** tab, navigate to the **Nodes** page and click the `nixagent` node. On the **Facts** tab, scroll to view the `datacenter` fact displayed in the list.

    **Congratulations!** You installed an external fact script to create a data center fact, and then verified that Facter can retrieve the data in the fact (**datacenter** is set to the value you chose in step 5).

    **Find bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**

    To try this on Windows, continue on. To close this lab, click **Next**.

    - - -
    <a name="windows"><img src="https://storage.googleapis.com/instruqt-images/graphic-windows.png"></a>

    ## Create an external fact:
    1. Check that the data center fact does not already exist. On the **Windows Agent** tab, open a Powershell window from the **Start** menu, and then run the following command (it should produce no value):
    ```
    facter datacenter
    ```
    2. Move the provided external fact script into place by creating the following file (click **Yes** when prompted to create the file):
    ```
    notepad C:\ProgramData\PuppetLabs\facter\facts.d\datacenter.ps1
    ```

    3. Add the following contents to the file, replacing `<DATACENTER>` with your time zone's **Datacenter** value from the table below. Then, save and exit the file.
    Tip: Click the code block to copy it, and then right-click and paste it.
    ```
    write-host "datacenter=<DATACENTER>"
    ```

    | Time zone | Datacenter      |
    |-----------|-----------------|
    | Eastern   | datacenter-east |
    | Pacific   | datacenter-west |

    ## Verify that the fact was installed and is accessible by Facter:
    4. Run `facter datacenter` again and notice the new output - it should return the value you chose in step 3.

    5. Run Puppet to send the new fact to the primary Puppet server:
    ```
    puppet agent -t
    ```

    6. On the **PE Console** tab, navigate to **Nodes** and click the `winagent` node. On the **Facts** tab, scroll to view the `datacenter` fact shown in the list.

    **Congratulations!** You installed an external fact script to create a data center fact, and then verified that facter was able to retrieve the data in the fact (**datacenter** is set to the value you chose in step 3).

    **Find bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**

    To close this lab, click **Next**.
  tabs:
  - title: PE Console
    type: service
    hostname: puppet
    port: 443
  - title: Primary Server
    type: terminal
    hostname: puppet
  - title: Linux Agent
    type: terminal
    hostname: nixagent
  - title: Windows Agent
    type: service
    hostname: guac
    path: /#/client/c/winagent?username=instruqt&password=Passw0rd!
    port: 8080
  - title: "Bug Zapper \U0001F99F⚡"
    type: website
    hostname: guac
    url: https://docs.google.com/forms/d/e/1FAIpQLSfeCPR2SFCb_xCGvz-8gcXk5bncpBdFkXUovtzR0Yjfil1cAw/viewform?embedded=true
  difficulty: basic
  timelimit: 3600
checksum: "13995536535480797721"
