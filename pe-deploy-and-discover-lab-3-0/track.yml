slug: pe-deploy-and-discover-lab-3-0
id: trd6dwmkdt6s
type: sandbox
title: 'PE Deploy and Discover - Lab 3.0: Identify Your Nodes Using External Facts'
teaser: You can use facts to help you write conditional expressions and reusable code.
description: |-
  # We're putting the finishing touches on this BETA Puppet Practice Lab — go ahead and take a peek!

  Please help us find any bugs that need to be zapped and share your feedback for improving this learning experience by clicking the **Bug Zapper** tab at the top of each challenge and completing the short survey.

  We welcome your suggestions and value your feedback. If you have additional comments or suggestions after completing this BETA Puppet Practice Lab, please [reach out to us directly](mailto:education@puppet.com).
  ___

  **What you'll learn**

  In this lab, you'll run Facter to retrieve a core fact value. Then, you'll use that value to define a simple external fact that sets site-specific information about the node.

  Facts provide a foundation on which you can write conditional expressions and reusable code. Examples include:
  * Using facts in a file template to configure different versions of a file based on the fact values that the agents send to the primary server — such as creating a web server config file for each agent, where the server hostname setting is dynamically set to the hostname fact value sent by the agent.
  * Defining facts to use in PuppetDB queries or to provide the primary server with additional information for building the agent node's catalog.



  **Prerequisites**

  None

  **Before you start**

  Keep an eye on the clock. You have 30 minutes to complete this lab. After 30 minutes, your learning environment expires and your work will not be saved. If you haven't completed the lab, you can simply restart it. Click **Start track** when you're ready to begin.
icon: https://storage.googleapis.com/instruqt-images/bz-smallicon-1.png
tags:
- ""
owner: puppet
developers:
- greg.larkin@puppet.com
- thomas.chisholm@puppet.com
- tara.swenson@puppet.com
- catherine.trinkwon@puppet.com
- bart.kliebert@puppet.com
private: true
published: true
show_timer: true
challenges:
- slug: use-facter-with-an-external-script
  id: br8duqywypho
  type: challenge
  title: Use Facter with an external script
  teaser: Create an external fact in a script and discover what Facter returns.
  notes:
  - type: text
    contents: |-
      It's your first day on the job in your new sysadmin role, and your boss sent you an email asking you to tag each node with its corresponding data center.

      To read the email, click the arrow (**>**) at the right.
  - type: text
    contents: |-
      <img src="https://storage.googleapis.com/instruqt-images/PE-deploy-and-discover/lab-3.0-boss-memo.png" width="90%">

      Read the email above, and then click the arrow (**>**) at the right to continue.
  - type: text
    contents: |-
      With this new information, you'll extend Facter by defining an external fact that identifies and tags each server with its corresponding data center location.

      Facter — a component of the Puppet agent — gathers built-in (core) facts that are packaged within it. It can also gather custom or external facts by using scripts that you or a third party have written.

      Facter collects these facts on each Puppet run and sends them to the primary server. The primary server uses facts to build each agent's catalog.

      Click the arrow (**>**) at the right to continue.
  - type: text
    contents: |-
      In this lab, you will:
       * Run Facter to retrieve a node's `timezone` fact to discover which time zone a node is located in.
       * Create a `datacenter` external fact that marks a node with its corresponding data center based on its time zone.

      Click **Start** when you're ready to begin.
  assignment: "\n<img src=\"https://storage.googleapis.com/instruqt-images/graphic-linux.png\" a name=\"linux\">\n\n# Create an external fact on a Linux node\n*Skip to the [Windows instructions](#windows).*\n\n1. ![switch tabs](https://storage.googleapis.com/instruqt-images/Instruct%20Icons/icon_switch_tabs_white_32.png) Switch to the **Linux Agent** tab if needed.\n\n2. Ensure there isn't already a fact called `datacenter` on the Linux node:<br><br>\n    ✏️ **Tip:** Click the code block to copy it, and then right-click and paste it on the command line.<br><br>\n    ```\n    facter datacenter\n    ```\n    ✔️ **Result:** Facter returns no value.\n\nBefore creating the `datacenter` external fact, you need to know what value you're going to assign it. It can be anything of course, but for this example, you'll assign a data center name based on the node's time zone.\n\n3. Retrieve the value of the `timezone` core fact:<br><br>\n    ```\n    facter timezone\n    ```\n    ✔️ **Result:** Puppet outputs the node's time zone. You will use this to create the `datacenter` fact in the coming steps.<br><br>\n    | Time Zone     | Data Center Name |\n    |---------------|-------------|\n    | Eastern / EDT | dc-east     |\n    | Pacific / PDT | dc-west     |\n\n4. We've provided a simple external fact script below. To put it into place, create the Facter location directory and external fact script:<br><br>\n    ```\n    mkdir -p /etc/puppetlabs/facter/facts.d\n    ```\n\n5. Open the script in the vi editor:<br><br>\n    ```\n    vi /etc/puppetlabs/facter/facts.d/datacenter.sh\n    ```\n6. Copy the code below into the file.<br><br>\U0001F4A1 **Tip:** To do this, type `:set paste`, press **Enter**, and then press `i`. Then, click the code below to copy it, and paste it into the file.<br><br>\n    ```\n    #!/usr/bin/env bash\n    echo \"datacenter=<DATACENTER>\"\n    ```\n\n7. Using the information from the table above, replace `<DATACENTER>` with the ****Data Center Name**** that corresponds to the output of the node's `timezone` fact.\n\n8. Save and exit vi by pressing `ESC` and typing `:wq`.\n\n9. Run the following command make the script executable:<br><br>\n    ```\n    chmod +x /etc/puppetlabs/facter/facts.d/datacenter.sh\n    ```\n\n## Verify that the fact was installed and is accessible by Facter:\n\n10. Run `facter datacenter` again and notice the new output.<br><br>\n    ✔️ **Result:** : Facter returns `dc-west`.\n\n11. Run Puppet to send all facts (built-in and external) to the primary Puppet server:<br><br>\n    ```\n    puppet agent -t\n    ```\n\n12. ![switch tabs](https://storage.googleapis.com/instruqt-images/Instruct%20Icons/icon_switch_tabs_white_32.png) Switch to the **PE Console** tab and navigate to the **Nodes** page.\n\n13. Click the Linux node (the name that contains `nixagent`).\n\n14. On the **Facts** tab, scroll to view the `datacenter` fact displayed in the list.\n\n<br>\U0001F388 **Congratulations!**  You installed an external fact script to create a `datacenter` fact, and then verified that Facter can retrieve the data in the fact.\n\n---\n\n# Create an external fact on a Windows node\n<a name=\"windows\"><img src=\"https://storage.googleapis.com/instruqt-images/graphic-windows.png\"></a>\n\n1. ![switch tabs](https://storage.googleapis.com/instruqt-images/Instruct%20Icons/icon_switch_tabs_white_32.png) Switch to the **Windows Agent** tab.\n\n2. Ensure there isn't already a fact called `datacenter` on the Windows node: Open a ****Powershell**** window from the ****Start**** menu, and then run the following command:<br><br>\n    ✏️ Tip: Click the code block to copy it, and then right-click and paste it.<br><br>\n\n    ```\n    facter datacenter\n    ```\n    ✔️ **Result:** Facter returns no value.\nBefore creating the `datacenter` external fact, you need to know what value you're going to assign it. It can be anything of course, but for this example, you'll assign a data center name based on the node's time zone.\n\n3. See the value of the `timezone` core fact:<br><br>\n    ```\n    facter timezone\n    ```\n    ✔️ **Result:** Puppet outputs the node's time zone. You will use this to create the `datacenter` fact in the coming steps.<br><br>\n    | Time Zone     | Data Center Name |\n    |---------------|-------------|\n    | Eastern / EDT | dc-east     |\n    | Pacific / PDT | dc-west     |\n\n4. We've provided a simple external fact script below. To put it into place, create the following file:<br><br>\n    ⚠️ **Important:** Click ****Yes**** when prompted to create the file.<br><br>\n    ```\n    notepad C:\\ProgramData\\PuppetLabs\\facter\\facts.d\\datacenter.ps1\n    ```\n\n5. Using the information from the table above, replace `<DATACENTER>` with the ****Data Center Name**** that corresponds to the output of the node's `timezone` fact. <br><br>\n    ```\n    write-host \"datacenter=<DATACENTER>\"\n    ```\n\n6. Save the file and exit Notepad.\n\n## Verify that the fact was installed and is accessible by Facter:\n\n7. In Powershell, run `facter datacenter` again and notice the new output.<br><br>\n    ✔️ **Result:** : Facter should return `dc-east`.\n\n1. Run Puppet to send all facts (built-in and external) to the primary Puppet server:<br><br>\n    ```\n    puppet agent -t\n    ```\n\n1. ![switch tabs](https://storage.googleapis.com/instruqt-images/Instruct%20Icons/icon_switch_tabs_white_32.png) Switch to the **PE Console** tab and navigate to the **Nodes** page.\n\n1. Click the Windows node (the name that contains `winagent`).\n\n1. On the **Facts** tab, scroll to view the `datacenter` fact displayed in the list.\n\n<br>\U0001F388 **Congratulations!**  You installed an external fact script to create a `datacenter` fact, and then verified that Facter was able to retrieve the data in the fact.\n\n---\n\n**Find any bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**\n\nTo close this lab, click **Next**."
  tabs:
  - title: Linux Agent
    type: terminal
    hostname: nixagent
  - title: Windows Agent
    type: service
    hostname: guac
    path: /#/client/c/winagent?username=instruqt&password=Passw0rd!
    port: 8080
  - title: PE Console
    type: service
    hostname: puppet
    port: 443
  - title: "Bug Zapper \U0001F99F⚡"
    type: website
    hostname: guac
    url: https://docs.google.com/forms/d/e/1FAIpQLSfeCPR2SFCb_xCGvz-8gcXk5bncpBdFkXUovtzR0Yjfil1cAw/viewform?embedded=true
  difficulty: basic
  timelimit: 1800
checksum: "13299101054124179489"
