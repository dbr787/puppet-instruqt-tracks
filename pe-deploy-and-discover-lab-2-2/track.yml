slug: pe-deploy-and-discover-lab-2-2
id: yvrywfvwitpx
type: sandbox
title: 'PE Deploy and Discover - Lab 2.2: Configure Additional Agent Package Platforms'
teaser: Learn how to configure PE to support agent installation on different operating systems.
description: |-
  # We're putting the finishing touches on this BETA Puppet Practice Lab — go ahead and take a peek!

  Please help us find any bugs that need to be zapped and share your feedback for improving this learning experience by clicking the **Bug Zapper** tab at the top of each challenge and completing the short survey.

  We welcome your suggestions and value your feedback. If you have additional comments or suggestions after completing this BETA Puppet Practice Lab, please [reach out to us directly](mailto:education@puppet.com).
  ___

  **What you'll learn**

  In this lab, you'll learn how to configure the primary Puppet server to provide the packages needed to install agents on different operating systems, making agent deployment faster and easier across your infrastructure.


  **Prerequisites**

  None

  **Before you start**

  Keep an eye on the clock. You have 30 minutes to complete this lab. After 30 minutes, your learning environment expires and your work will not be saved. If you haven't completed the lab, you can simply restart it. Click **Start track** when you're ready to begin.
icon: https://storage.googleapis.com/instruqt-images/bz-smallicon-1.png
tags: []
owner: puppet
developers:
- greg.larkin@puppet.com
- tara.swenson@puppet.com
- thomas.chisholm@puppet.com
- catherine.trinkwon@puppet.com
private: true
published: true
show_timer: true
challenges:
- slug: configure-additional-agent-package-platforms
  id: znr1665vsmzt
  type: challenge
  title: Configure PE to support additional agent platforms
  teaser: Add agent packages for the platforms in your infrastructure.
  notes:
  - type: text
    contents: |-
      In this lab, you will:

      1. Attempt an agent installation on a node with a different OS than the primary server.
      2. Configure the primary server to provide OS-specific agent packages so that you can install agents across a variety of nodes.
      3. Attempt the agent installation again and autosign the agent certificate by providing a challenge password.

      Click **Start** when you're ready to begin.
  assignment: |
    1. Navigate to the Linux node by clicking the **Linux Agent** tab. Then, install an agent by running the installation script with the `custom_attributes:challengePassword` parameter:
    ```
    uri='https://puppet:8140/packages/current/install.bash'
    curl --insecure "$uri" | bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT
    ```
    2. In the output, notice the failure message:
    ```
    The agent packages needed to support el-8-x86_64 are not present on your primary server.
    To add them, apply the pe_repo::platform::el_8_x86_64 class to your master node, and then run Puppet.
    The required agent packages should be retrieved when puppet runs on the master, after which you can run the install.bash script again.
    ```
    The installation failed because the EL8 package isn't present on the primary server - the primary server isn't running EL8. To ensure that the packages are present, you must add the `pe_repo::platform:<AGENT_OS_VERSION_ARCHITECTURE>` classes to the primary server.

    3. On the **PE Console** tab, log into PE with username `admin`and password `puppetlabs`.

    4. From the console sidebar, navigate to the **Node groups** page. Expand **PE Infrastructure** (click **+**) and then click **PE Master**.

    5. Add the repository class for the agent node OS that you want to support. On the **Classes** tab, in the **Add new class** field, enter `pe_repo`. From the list of classes, select the `pe_repo::platform::el_8_x86_64` repo class and then click **Add class**.

    6. Commit your change: Click **Commit** in the bottom right of the page.

    7. On the **Primary Server** tab, run Puppet to manually trigger the download of the new agent package to the primary server:
    ```
    puppet agent -t
    ```

    8. Return to the Linux node by clicking the **Linux Agent** tab. Then, install the agent on the Linux node by running the following installation script, which includes the `custom_attributes:challengePassword` parameter to autosign the agent certificate:

    ```
    uri='https://puppet:8140/packages/current/install.bash'
    curl --insecure "$uri" | sudo bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT
    ```
    In the output, notice the success message:
    ```
    Installed:
      puppet-agent-6.22.1-1.el8.x86_64

    Complete!
    ```

    Congratulations! You configured PE to support installing agents that run a different OS than the primary server.

    **Find bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**

    To close this lab, click **Next**.
  tabs:
  - title: Primary Server
    type: terminal
    hostname: puppet
  - title: Linux Agent
    type: terminal
    hostname: nixagent
  - title: PE Console
    type: service
    hostname: puppet
    port: 443
  - title: "Bug Zapper \U0001F99F⚡"
    type: website
    hostname: guac
    url: https://docs.google.com/forms/d/e/1FAIpQLSdY-3mNOlLsOXazyxzw295dUHMgU8ThEBS_iITfO0Pd8uVcIQ/viewform?embedded=true
  difficulty: basic
  timelimit: 1200
checksum: "4694691815010446581"
