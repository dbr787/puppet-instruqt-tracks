slug: pe-deploy-and-discover-lab-3-2
id: 6iykmwi1khah
type: track
title: 'PE Deploy and Discover - Lab 3.2: Establish server roles by reinstalling agents with trusted facts'
teaser: Reinstall your agents with a trusted fact to enable you to identify each server's role.
description: |-
  # We're putting the finishing touches on this BETA Puppet Practice Lab — go ahead and take a peek!

  Please help us find any bugs that need to be zapped and share your feedback for improving this learning experience by clicking the **Bug Zapper** tab at the top of each challenge and completing the short survey.

  Thank you for your help. We welcome your suggestions and value your feedback. If you have additional comments or suggestions after completing this BETA Puppet Practice Lab, please [reach out to us directly](mailto:education@puppet.com). We want to hear from you.
  ___

  **What you'll learn**

  In this lab you'll learn how to uninstall/reinstall the Puppet agent with trusted facts in order to use server roles in classifying nodes.

  **Prerequisites**

  None

  **Before you start**

  Keep an eye on the clock. You have 30 minutes to complete this lab. After 30 minutes, your learning environment expires and your work will not be saved. If you haven't completed the lab, you can simply restart it. Click **Start track** when you're ready to begin.
icon: ""
tags:
- ""
owner: puppet
developers:
- thomas.chisholm@puppet.com
- tara.swenson@puppet.com
- catherine.trinkwon@puppet.com
- greg.larkin@puppet.com
private: true
published: true
show_timer: true
challenges:
- slug: working-with-puppets-trusted-facts
  id: 0fmim6wrx8d8
  type: challenge
  title: Working With Puppet's Trusted Facts
  teaser: Working With Puppet's Trusted Facts
  assignment: |-
    ✏️ Note: This lab includes instructions for both Linux and Windows. To follow the Linux instructions, proceed below. Otherwise, click [here](#windows) to jump to Windows instructions.

    <a name="linux"><img src="https://storage.googleapis.com/instruqt-images/graphic-linux.png"></a>
    ## Uninstall Linux agents

    The *nix agent package includes an uninstall script, which you can use when you're ready to retire a node.
    1. Navigate to the **Linux node** by clicking on the **Linux agent** tab.
    2. Retrieve the node's certname by running the following command:

    ```
    puppet config print certname
    ```
    ✏️ Note: Make note of the certname — you will need it later in the lab.

    3. Run the uninstall script with the following command and parameters:

    ```
    /opt/puppetlabs/bin/puppet-enterprise-uninstaller -y -pd
    ```

    In the output, look for the `## Done!` message to confirm that the uninstaller ran successfully.

    4. Verify that the directory has been removed by running the following command:

    ```
    ls /etc/puppetlabs
    ```
    Your output will show the following, which confirms that the agent no longer exists:

    ```
    ls: cannot access /etc/puppetlabs: No such file or directory
    ```

    ## Remove nodes from the primary server

    Uninstalling the agent from a node does not remove the node from PE. If you no longer want PE to manage an agent node, you must purge it, making its license available for another node.

    Removing (purging) a node:

    - Removes the node from PuppetDB.
    - Deletes the primary server’s information cache for the node.
    - Makes the license available for another node.
    - Makes the hostname available for another node.

    1. Navigate to the **PE Server** [previous instruction: Open a terminal on the primary server.]
    2. Purge the node by running the following command, replacing <CERTNAME> with the certname you obtained previously:

    ```
    puppet node purge <CERTNAME>
    ```

    Result: The node’s certificate is revoked, the certificate revocation list (CRL) is updated, and the node is removed from PuppetDB and the console. The license is now available for another node. The node can't check in or re-register with PuppetDB on the next Puppet run.

    ## Install agents with trusted facts and an autosign password

    1. Install an agent on each target by using the installation script, passing in the corresponding role and datacenter.
    - For the datacenter, use the external fact 'datacenter' you created in lab 3.0.
    - For the role, use the package data you gathered from each node in lab 3.1.

    | Package     | Role            |
    | ----------- | --------------- |
    | java        | ecommerce       |
    | apache      | cmsweb          |
    | nginx       | cmsloadbalancer |

    ```
    uri='https://primary.example.com:8140/packages/current/install.bash'
    curl --insecure "$uri" | sudo bash -s custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT extension_requests:pp_role=<ROLE> extension_requests:pp_datacenter=<DATACENTER>
    ```
    2. Log into the **PE Console**, and then click on the **Nodes** page to view the trusted facts on the new nodes.

    Congratulations! You uninstalled the Puppet agent from your nodes and purged them from PE so that you can re-use their node licenses. You securely assigned each server's role & datacenter in your environment by installing the Puppet agent with trusted facts. And, you installed the Puppet agent with an autosign password to enable certificate signing so that the agent can be authenticated by the primary server.

    **Find bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**

    To close this lab, click **Next**.

    <a name="windows"><img src="https://storage.googleapis.com/instruqt-images/graphic-windows.png"></a>
     ## Uninstall Windows agents

    To uninstall the agent from a Windows node, you can use the **Windows Add or Remove Programs** interface, or command line using the .msi package.

    Uninstalling the Windows agent removes:
    - The Puppet program directory
    - The agent service
    - All related registry keys

    The `data` directory remains intact, including all SSL keys. To completely remove Puppet from the system, you must manually delete the data directory: `C:\ProgramData\PuppetLabs\puppet`

    1. Navigate to the Windows node and open a PowerShell terminal.
    2. Retrieve the node's certname by running the following command:
    ```
    puppet config print certname
    ```
    ✏️ Note: Make note of the certname — you will need it later in the lab.

    3. Launch the **Windows Add or Remove Programs** interface by running the following command:
    ```
    appwiz
    ```
    4. Right-click __Puppet Agent (64-bit)__, select __Uninstall__, and follow the prompts.
    5. Delete the data directory `C:\ProgramData\PuppetLabs\puppet` by running the following command in the PowerShell terminal:

    ```
    remove-item C:\ProgramData\PuppetLabs\puppet -Recurse -Confirm:$false
    ```
    ## Remove nodes from the primary server

    Uninstalling the agent from a node does not remove the node from PE - If you no longer want PE to manage an agent node, you must purge it, making its license available for another node.

    Removing (purging) a node:

    - Removes the node from PuppetDB.
    - Deletes the primary server’s information cache for the node.
    - Makes the license available for another node.
    - Makes the hostname available for another node.

    1. Navigate to the **PE Server**.
    2. Purge the node by running the following command, replacing <CERTNAME> with the certname you obtained previously:
    ```
    puppet node purge <CERTNAME>
    ```
    Result: The node’s certificate is revoked, the certificate revocation list (CRL) is updated, and the node is removed from PuppetDB and the console. The license is now available for another node. The node can't check in or re-register with PuppetDB on the next Puppet run.

    ## Install agents with trusted facts and an autosign password

    1. Install an agent on each target by using the installation script, passing in the corresponding role and datacenter.
    - For the datacenter, use the external fact 'datacenter' you created in lab 3.0.
    - For the role, use the package data you gathered from each node in lab 3.1.

    | Package     | Role            |
    | ----------- | --------------- |
    | java        | ecommerce       |
    | apache      | cmsweb          |
    | nginx       | cmsloadbalancer |

    ```
    [Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};
    $webClient = New-Object System.Net.WebClient;
    $webClient.DownloadFile('https://puppet:8140/packages/current/install.ps1', 'install.ps1');
    .\install.ps1 custom_attributes:challengePassword=PASSWORD_FOR_AUTOSIGNER_SCRIPT extension_requests:pp_role=<ROLE> extension_requests:pp_datacenter=<DATACENTER>
    ```
    2. Log into the **PE Console**, and then click on the **Nodes** page to view the trusted facts on the new nodes.

    Congratulations! You uninstalled the Puppet agent from your nodes and purged them from PE so that you can re-use their node licenses. You securely assigned each server's role & datacenter in your environment by installing the Puppet agent with trusted facts. And, you installed the Puppet agent with an autosign password to enable certificate signing so that the agent can be authenticated by the primary server.

    **Find bugs or have feedback? Click the **Bug Zapper** tab near the top of the page and let us know!**

    To close this lab, click **Next**.
  tabs:
  - title: Linux Agent 1
    type: terminal
    hostname: nixagent1
  - title: Linux Agent 2
    type: terminal
    hostname: nixagent2
  - title: Primary Server
    type: terminal
    hostname: puppet
  - title: PE Console
    type: service
    hostname: puppet
    path: /
    port: 443
  - title: "Bug Zapper \U0001F99F⚡"
    type: website
    hostname: guac
    url: https://docs.google.com/forms/d/1pT9JaoKEsNcq46Xd1sptUKqF2eINQA6aSJdZ5ClWtJA/viewform?embedded=true
  - title: Windows Agent
    type: service
    hostname: guac
    path: /#/client/c/winagent?username=instruqt&password=Passw0rd!
    port: 8080
  difficulty: basic
  timelimit: 3600
checksum: "11084187744828823404"
